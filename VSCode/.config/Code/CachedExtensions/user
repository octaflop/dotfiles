{"input":{"ourVersion":"1.30.2","commit":"61122f88f0bf01e2ac16bdb9e1bc4571755f5bd8","locale":"en-us","devMode":false,"absoluteFolderPath":"/home/faris/.vscode/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1548987606328},"result":[{"name":"anaconda-extension-pack","version":"1.0.1","publisher":"ms-python","engines":{"vscode":"^1.26.0"},"license":"MIT","displayName":"Anaconda Extension Pack","description":"The Anaconda Extension Pack is a set of extensions that enhance the experience of Anaconda customers using Visual Studio Code","icon":"icon.png","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-anaconda-extension-pack"},"categories":["Extension Packs"],"keywords":["python","anaconda","conda"],"extensionPack":["ms-python.python","redhat.vscode-yaml"],"uuid":"5a8b9107-e667-4ec8-a792-d066a93b9eff","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.anaconda-extension-pack","extensionLocation":{"$mid":1,"fsPath":"/home/faris/.vscode/extensions/ms-python.anaconda-extension-pack-1.0.1","path":"/home/faris/.vscode/extensions/ms-python.anaconda-extension-pack-1.0.1","scheme":"file"}},{"name":"python","displayName":"Python","description":"Linting, Debugging (multi-threaded, remote), Intellisense, code formatting, refactoring, unit tests, snippets, and more.","version":"2019.1.0","languageServerVersion":"0.1.78","publisher":"ms-python","author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+python","badges":[{"url":"https://vscode-python.visualstudio.com/VSCode-Python/_apis/build/status/VSCode-Python-Rolling-CI?branchName=master","href":"https://vscode-python.visualstudio.com/VSCode-Python/VSCode-Python%20Team/_build/index?context=allDefinitions&path=&definitionId=9","description":"Continuous integration (VSTS)"},{"url":"https://travis-ci.org/Microsoft/vscode-python.svg?branch=master","href":"https://travis-ci.org/Microsoft/vscode-python","description":"Continuous integration (Travis)"},{"url":"https://codecov.io/gh/Microsoft/vscode-python/branch/master/graph/badge.svg","href":"https://codecov.io/gh/Microsoft/vscode-python","description":"Test coverage"}],"icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.26.0"},"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Snippets","Formatters","Other"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onDebugResolve:python","onCommand:python.execInTerminal","onCommand:python.sortImports","onCommand:python.runtests","onCommand:python.debugtests","onCommand:python.setInterpreter","onCommand:python.setShebangInterpreter","onCommand:python.viewTestUI","onCommand:python.viewTestOutput","onCommand:python.selectAndRunTestMethod","onCommand:python.selectAndDebugTestMethod","onCommand:python.selectAndRunTestFile","onCommand:python.runCurrentTestFile","onCommand:python.runFailedTests","onCommand:python.execSelectionInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.buildWorkspaceSymbols","onCommand:python.updateSparkLibrary","onCommand:python.startREPL","onCommand:python.goToPythonObject","onCommand:python.setLinter","onCommand:python.enableLinting","onCommand:python.createTerminal","onCommand:python.discoverTests","onCommand:python.datascience.showhistorypane","onCommand:python.datascience.importnotebook","onCommand:python.datascience.selectjupyteruri","onCommand:python.datascience.exportfileasnotebook","onCommand:python.datascience.exportfileandoutputasnotebook","onCommand:python.python.enableSourceMapSupport"],"main":"/home/faris/.vscode/extensions/ms-python.python-2019.1.0/out/client/extension","contributes":{"snippets":[{"language":"python","path":"./snippets/python.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !python.datascience.hascodecells"},{"command":"python.datascience.runcurrentcelladvance","key":"shift+enter","when":"editorFocus && python.datascience.hascodecells && python.datascience.featureenabled"}],"commands":[{"command":"python.enableSourceMapSupport","title":"Enable source map support for extension debugging","category":"Python"},{"command":"python.sortImports","title":"Sort Imports","category":"Python Refactor"},{"command":"python.startREPL","title":"Start REPL","category":"Python"},{"command":"python.createTerminal","title":"Create Terminal","category":"Python"},{"command":"python.buildWorkspaceSymbols","title":"Build Workspace Symbols","category":"Python"},{"command":"python.runtests","title":"Run All Unit Tests","category":"Python"},{"command":"python.debugtests","title":"Debug All Unit Tests","category":"Python"},{"command":"python.execInTerminal","title":"Run Python File in Terminal","category":"Python"},{"command":"python.setInterpreter","title":"Select Interpreter","category":"Python"},{"command":"python.updateSparkLibrary","title":"Update Workspace PySpark Libraries","category":"Python"},{"command":"python.refactorExtractVariable","title":"Extract Variable","category":"Python Refactor"},{"command":"python.refactorExtractMethod","title":"Extract Method","category":"Python Refactor"},{"command":"python.viewTestOutput","title":"Show Unit Test Output","category":"Python"},{"command":"python.selectAndRunTestMethod","title":"Run Unit Test Method ...","category":"Python"},{"command":"python.selectAndDebugTestMethod","title":"Debug Unit Test Method ...","category":"Python"},{"command":"python.selectAndRunTestFile","title":"Run Unit Test File ...","category":"Python"},{"command":"python.runCurrentTestFile","title":"Run Current Unit Test File","category":"Python"},{"command":"python.runFailedTests","title":"Run Failed Unit Tests","category":"Python"},{"command":"python.discoverTests","title":"Discover Unit Tests","category":"Python"},{"command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","category":"Python"},{"command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","category":"Python"},{"command":"python.goToPythonObject","title":"Go to Python Object","category":"Python"},{"command":"python.setLinter","title":"Select Linter","category":"Python"},{"command":"python.enableLinting","title":"Enable Linting","category":"Python"},{"command":"python.runLinting","title":"Run Linting","category":"Python"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive window","category":"Python"},{"command":"python.datascience.runallcells","title":"Run Current File in Python Interactive window","category":"Python"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python"},{"command":"python.datascience.selectjupyteruri","title":"Specify Jupyter server URI","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive window as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python file as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python"},{"command":"python.datascience.undocells","title":"Undo last Python Interactive action","category":"Python"},{"command":"python.datascience.redocells","title":"Redo last Python Interactive action","category":"Python"},{"command":"python.datascience.removeallcells","title":"Delete all Python Interactive cells","category":"Python"},{"command":"python.datascience.interruptkernel","title":"Interrupt iPython Kernel","category":"Python"},{"command":"python.datascience.restartkernel","title":"Restart iPython Kernel","category":"Python"},{"command":"python.datascience.expandallcells","title":"Expand all Python Interactive cells","category":"Python"},{"command":"python.datascience.collapseallcells","title":"Collapse all Python Interactive cells","category":"Python"}],"menus":{"editor/context":[{"command":"python.refactorExtractVariable","title":"Refactor: Extract Variable","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.refactorExtractMethod","title":"Refactor: Extract Method","group":"Refactor","when":"editorHasSelection && editorLangId == python"},{"command":"python.sortImports","title":"Refactor: Sort Imports","group":"Refactor","when":"editorLangId == python"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python","command":"python.runCurrentTestFile","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcell","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.runcurrentcelladvance","group":"Python"},{"when":"editorFocus && editorLangId == python && resourceLangId == jupyter && python.datascience.featureenabled","command":"python.datascience.importnotebook","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.exportfileasnotebook","group":"Python2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled","command":"python.datascience.exportfileandoutputasnotebook","group":"Python2@2"}],"explorer/context":[{"when":"resourceLangId == python","command":"python.runtests","group":"Python"},{"when":"resourceLangId == python","command":"python.debugtests","group":"Python"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == jupyter","command":"python.datascience.importnotebook","group":"Python"}],"commandPalette":[{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.showhistorypane","title":"Show Python Interactive window","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runallcells","title":"Run Current File in Python Interactive window","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"%python.command.python.datascience.exportfilesasnotebook.title%","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.undocells","title":"Undo last Python Interactive action","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled"},{"command":"python.datascience.redocells","title":"Redo last Python Interactive action","category":"Python","when":"python.datascience.haveredoablecells && python.datascience.featureenabled"},{"command":"python.datascience.removeallcells","title":"Delete all Python Interactive cells","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled"},{"command":"python.datascience.interruptkernel","title":"Interrupt iPython Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.restartkernel","title":"Restart iPython Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.expandallcells","title":"Expand all Python Interactive cells","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.collapseallcells","title":"Collapse all Python Interactive cells","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive window as Jupyter Notebook","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled"}]},"debuggers":[{"type":"python","label":"Python","languages":["python"],"enableBreakpointsFor":{"languageIds":["python","html","jinja"]},"aiKey":"AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217","program":"./out/client/debugger/debugAdapter/main.js","runtime":"node","configurationSnippets":[{"label":"Python: Terminal (integrated)","description":"Debug a Python program with Integrated Terminal/Console","body":{"name":"Python: Terminal (integrated)","type":"python","request":"launch","program":"^\"\\${file}\"","console":"integratedTerminal"}},{"label":"Python: Terminal (external)","description":"Debug a Python program with External Terminal/Console","body":{"name":"Python: Terminal (external)","type":"python","request":"launch","program":"^\"\\${file}\"","console":"externalTerminal"}},{"label":"Python: Module","description":"Debug a Python Module","body":{"name":"Python: Module","type":"python","request":"launch","module":"enter-your-module-name-here","console":"integratedTerminal"}},{"label":"Python: Django","description":"Debug a Django Application","body":{"name":"Django","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/manage.py\"","args":["runserver","--noreload","--nothreading"],"django":true}},{"label":"Python: Flask","description":"Debug a Flask Application","body":{"name":"Flask","type":"python","request":"launch","module":"flask","env":{"FLASK_APP":"app.py","FLASK_ENV":"development","FLASK_DEBUG":"0"},"args":["run","--no-debugger","--no-reload"],"jinja":true}},{"label":"Python: Gevent","description":"Debug a Gevent Application","body":{"name":"Gevent","type":"python","request":"launch","program":"^\"\\${file}\"","gevent":true}},{"label":"Python: PySpark","description":"Debug PySpark","body":{"name":"PySpark","type":"python","request":"launch","osx":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"windows":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit.cmd\""},"linux":{"pythonPath":"^\"\\${env:SPARK_HOME}/bin/spark-submit\""},"program":"^\"\\${file}\""}},{"label":"Python: Watson","description":"Debug a Watson Application","body":{"name":"Watson","type":"python","request":"launch","program":"^\"\\${workspaceFolder}/console.py\"","args":["dev","runserver","--noreload=True"],"jinja":true}},{"label":"Python: Scrapy","description":"Scrapy with Integrated Terminal/Console","body":{"name":"Scrapy","type":"python","request":"launch","module":"scrapy","args":["crawl","specs","-o","bikes.json"]}},{"label":"Python: Pyramid","description":"Debug a Pyramid Application","body":{"name":"Pyramid","type":"python","request":"launch","args":["^\"\\${workspaceFolder}/development.ini\""],"pyramid":true,"jinja":true}},{"label":"Python: Remote Attach","description":"Attach the Debugger for Remote Debugging","body":{"name":"Attach (Remote Debug)","type":"python","request":"attach","port":5678,"host":"localhost","pathMappings":[{"localRoot":"${workspaceFolder}","remoteRoot":"."}]}}],"configurationAttributes":{"launch":{"properties":{"module":{"type":"string","description":"Name of the module to be debugged.","default":""},"program":{"type":"string","description":"Absolute path to the program.","default":"${file}"},"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings.json","default":"${config:python.pythonPath}"},"args":{"type":"array","description":"Command line arguments passed to the program","default":[],"items":{"type":"string"}},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":false},"console":{"enum":["none","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"integratedTerminal"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"port":{"type":"number","description":"Debug port (default is 0, resulting in the use of a dynamic port).","default":0},"host":{"type":"string","description":"IP address of the of the local debug server (default is localhost).","default":"localhost"},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false},"gevent":{"type":"boolean","description":"Enable debugging of gevent monkey-patched code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"sudo":{"type":"boolean","description":"Running debug program under elevated permissions (on Unix).","default":false},"pyramid":{"type":"boolean","description":"Whether debugging Pyramid applications","default":false},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}},"attach":{"required":["port"],"properties":{"port":{"type":"number","description":"Debug port to attach","default":0},"host":{"type":"string","description":"IP Address of the of remote server (default is localhost or use 127.0.0.1).","default":"localhost"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"debugStdLib":{"type":"boolean","description":"Debug standard library code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}}}}],"configuration":{"type":"object","title":"Python","properties":{"python.diagnostics.sourceMapsEnabled":{"type":"boolean","default":false,"description":"Enable source map support for meaningful strack traces in error logs.","scope":"application"},"python.autoComplete.addBrackets":{"type":"boolean","default":false,"description":"Automatically add brackets for functions.","scope":"resource"},"python.autoComplete.extraPaths":{"type":"array","default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource"},"python.autoComplete.showAdvancedMembers":{"type":"boolean","default":true,"description":"Controls appearance of methods with double underscores in the completion list.","scope":"resource"},"python.autoComplete.typeshedPaths":{"type":"array","items":{"type":"string"},"default":[],"description":"Specifies paths to local typeshed repository clone(s) for the Python language server.","scope":"resource"},"python.autoUpdateLanguageServer":{"type":"boolean","default":true,"description":"Automatically update the language server.","scope":"application"},"python.dataScience.allowImportFromNotebook":{"type":"boolean","default":true,"description":"Allows a user to import a jupyter notebook into a python file anytime one is opened.","scope":"resource"},"python.dataScience.enabled":{"type":"boolean","default":true,"description":"Enable the experimental data science features in the python extension.","scope":"resource"},"python.dataScience.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"python.dataScience.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start.","scope":"resource"},"python.dataScience.jupyterServerURI":{"type":"string","default":"local","description":"Select the Jupyter server URI to connect to. Select 'local' to launch a new Juypter server on the local machine.","scope":"resource"},"python.dataScience.notebookFileRoot":{"type":"string","default":"${workspaceFolder}","description":"Set the root directory for loading files for the Python Interactive window.","scope":"resource"},"python.dataScience.searchForJupyter":{"type":"boolean","default":true,"description":"Search all installed Python interpreters for a Jupyter installation when starting the Python Interactive window","scope":"resource"},"python.dataScience.changeDirOnImportExport":{"type":"boolean","default":true,"description":"When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.","scope":"resource"},"python.dataScience.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config for the Python Interactive window","scope":"resource"},"python.dataScience.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.","scope":"resource"},"python.dataScience.allowInput":{"type":"boolean","default":true,"description":"Allow the inputting of python code directly into the Python Interactive window"},"python.dataScience.showCellInputCode":{"type":"boolean","default":true,"description":"Show cell input code.","scope":"resource"},"python.dataScience.collapseCellInputCodeByDefault":{"type":"boolean","default":true,"description":"Collapse cell input code by default.","scope":"resource"},"python.dataScience.maxOutputSize":{"type":"number","default":400,"description":"Maximum size (in pixels) of text output in the Python Interactive window before a scrollbar appears. Set to -1 for infinity.","scope":"resource"},"python.dataScience.codeRegularExpression":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell. \nDefaults to '^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])' if left blank","scope":"resource"},"python.dataScience.markdownRegularExpression":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown. \nDefaults to '^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)' if left blank","scope":"resource"},"python.disableInstallationCheck":{"type":"boolean","default":false,"description":"Whether to check if Python is installed (also warn when using the macOS-installed Python).","scope":"resource"},"python.envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","scope":"resource"},"python.formatting.autopep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.autopep8Path":{"type":"string","default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"resource"},"python.formatting.provider":{"type":"string","default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.","enum":["autopep8","black","yapf","none"],"scope":"resource"},"python.formatting.blackArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.blackPath":{"type":"string","default":"black","description":"Path to Black, you can use a custom version of Black by modifying this setting to include the full path.","scope":"resource"},"python.formatting.yapfArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.yapfPath":{"type":"string","default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"resource"},"python.globalModuleInstallation":{"type":"boolean","default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource"},"python.jediEnabled":{"type":"boolean","default":true,"description":"Enables Jedi as IntelliSense engine instead of Microsoft Python Analysis Engine.","scope":"resource"},"python.jediMemoryLimit":{"type":"number","default":0,"description":"Memory limit for the Jedi completion engine in megabytes. Zero (default) means 1024 MB. -1 means unlimited (disable memory limit check)","scope":"resource"},"python.jediPath":{"type":"string","default":"","description":"Path to directory containing the Jedi library (this path will contain the 'Jedi' sub directory).","scope":"resource"},"python.analysis.openFilesOnly":{"type":"boolean","default":true,"description":"Only show errors and warnings for open files rather than for the entire workspace.","scope":"resource"},"python.analysis.diagnosticPublishDelay":{"type":"integer","default":1000,"description":"Delay before diagnostic messages are transferred to the problems list (in milliseconds).","scope":"resource"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to look for typeshed modules.","scope":"resource"},"python.analysis.errors":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as errors.","scope":"resource"},"python.analysis.warnings":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as warnings.","scope":"resource"},"python.analysis.information":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as information.","scope":"resource"},"python.analysis.disabled":{"type":"array","default":[],"items":{"type":"string"},"description":"List of suppressed diagnostic messages.","scope":"resource"},"python.analysis.logLevel":{"type":"string","enum":["Error","Warning","Information","Trace"],"default":"Error","description":"Defines type of log messages language server writes into the output window.","scope":"resource"},"python.analysis.symbolsHierarchyDepthLimit":{"type":"integer","default":10,"description":"Limits depth of the symbol tree in the document outline.","scope":"resource"},"python.linting.enabled":{"type":"boolean","default":true,"description":"Whether to lint Python files.","scope":"resource"},"python.linting.flake8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.flake8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.F":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using flake8","scope":"resource"},"python.linting.flake8Path":{"type":"string","default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.ignorePatterns":{"type":"array","description":"Patterns used to exclude files or folders from being linted.","default":[".vscode/*.py","**/site-packages/**/*.py"],"items":{"type":"string"},"scope":"resource"},"python.linting.lintOnSave":{"type":"boolean","default":true,"description":"Whether to lint Python files when saved.","scope":"resource"},"python.linting.maxNumberOfProblems":{"type":"number","default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource"},"python.linting.banditArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.banditEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using bandit.","scope":"resource"},"python.linting.banditPath":{"type":"string","default":"bandit","description":"Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.","scope":"resource"},"python.linting.mypyArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["--ignore-missing-imports","--follow-imports=silent","--show-column-numbers"],"items":{"type":"string"},"scope":"resource"},"python.linting.mypyCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyCategorySeverity.note":{"type":"string","default":"Information","description":"Severity of Mypy message type 'Note'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using mypy.","scope":"resource"},"python.linting.mypyPath":{"type":"string","default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"resource"},"python.linting.pep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pep8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Pep8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Pep8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pep8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pep8","scope":"resource"},"python.linting.pep8Path":{"type":"string","default":"pep8","description":"Path to pep8, you can use a custom version of pep8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.prospectorArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.prospectorEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using prospector.","scope":"resource"},"python.linting.prospectorPath":{"type":"string","default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"resource"},"python.linting.pydocstyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pydocstyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pydocstyle","scope":"resource"},"python.linting.pydocstylePath":{"type":"string","default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylamaArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylamaEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pylama.","scope":"resource"},"python.linting.pylamaPath":{"type":"string","default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylintCategorySeverity.convention":{"type":"string","default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.fatal":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Fatal/F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.refactor":{"type":"string","default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.warning":{"type":"string","default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintEnabled":{"type":"boolean","default":true,"description":"Whether to lint Python files using pylint.","scope":"resource"},"python.linting.pylintPath":{"type":"string","default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintUseMinimalCheckers":{"type":"boolean","default":true,"description":"Whether to run Pylint with minimal set of rules.","scope":"resource"},"python.pythonPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"resource"},"python.condaPath":{"type":"string","default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"resource"},"python.pipenvPath":{"type":"string","default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"resource"},"python.sortImports.args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.sortImports.path":{"type":"string","description":"Path to isort script, default using inner version","default":"","scope":"resource"},"python.terminal.activateEnvironment":{"type":"boolean","default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource"},"python.terminal.executeInFileDir":{"type":"boolean","default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource"},"python.terminal.launchArgs":{"type":"array","default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource"},"python.unitTest.cwd":{"type":"string","default":null,"description":"Optional working directory for unit tests.","scope":"resource"},"python.unitTest.debugPort":{"type":"number","default":3000,"description":"Port number used for debugging of unittests.","scope":"resource"},"python.unitTest.nosetestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.unitTest.nosetestsEnabled":{"type":"boolean","default":false,"description":"Enable unit testing using nosetests.","scope":"resource"},"python.unitTest.nosetestPath":{"type":"string","default":"nosetests","description":"Path to nosetests, you can use a custom version of nosetests by modifying this setting to include the full path.","scope":"resource"},"python.unitTest.promptToConfigure":{"type":"boolean","default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource"},"python.unitTest.pyTestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.unitTest.pyTestEnabled":{"type":"boolean","default":false,"description":"Enable unit testing using pytest.","scope":"resource"},"python.unitTest.pyTestPath":{"type":"string","default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"resource"},"python.unitTest.unittestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["-v","-s",".","-p","*test*.py"],"items":{"type":"string"},"scope":"resource"},"python.unitTest.unittestEnabled":{"type":"boolean","default":false,"description":"Enable unit testing using unittest.","scope":"resource"},"python.unitTest.autoTestDiscoverOnSaveEnabled":{"type":"boolean","default":true,"description":"Enable auto run test discovery when saving a unit test file.","scope":"resource"},"python.venvFolders":{"type":"array","default":["envs",".pyenv",".direnv"],"description":"Folders in your home directory to look into for virtual environments.","scope":"resource","items":{"type":"string"}},"python.venvPath":{"type":"string","default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"resource"},"python.workspaceSymbols.ctagsPath":{"type":"string","default":"ctags","description":"Fully qualified path to the ctags executable (else leave as ctags, assuming it is in current path).","scope":"resource"},"python.workspaceSymbols.enabled":{"type":"boolean","default":true,"description":"Set to 'false' to disable Workspace Symbol provider using ctags.","scope":"resource"},"python.workspaceSymbols.exclusionPatterns":{"type":"array","default":["**/site-packages/**"],"items":{"type":"string"},"description":"Pattern used to exclude files and folders from ctags See http://ctags.sourceforge.net/ctags.html.","scope":"resource"},"python.workspaceSymbols.rebuildOnFileSave":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on when changes made to python files are saved.","scope":"resource"},"python.workspaceSymbols.rebuildOnStart":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on start (defaults to true).","scope":"resource"},"python.workspaceSymbols.tagFilePath":{"type":"string","default":"${workspaceFolder}/.vscode/tags","description":"Fully qualified path to tag file (exuberant ctag file), used to provide workspace symbols.","scope":"resource"}}},"languages":[{"id":"pip-requirements","aliases":["pip requirements","requirements.txt"],"filenames":["requirements.txt","constraints.txt","requirements.in"],"filenamePatterns":["*-requirements.txt","requirements-*.txt","constraints-*.txt","*-constraints.txt","*-requirements.in","requirements-*.in"],"configuration":"./languages/pip-requirements.json"},{"id":"yaml","filenames":[".condarc"]},{"id":"toml","filenames":["Pipfile"]},{"id":"json","filenames":["Pipfile.lock"]},{"id":"jinja","extensions":[".jinja2",".j2"],"aliases":["Jinja"]},{"id":"jupyter","extensions":[".ipynb"]}],"grammars":[{"language":"pip-requirements","scopeName":"source.pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package","compile":"tsc -watch -p ./","compile-webviews-watch":"npx webpack --config webpack.datascience-ui.config.js --watch","dump-datascience-webpack-stats":"webpack --config webpack.datascience-ui.config.js --profile --json > tmp/ds-stats.json","compile-webviews":"gulp compile-webviews","compile-webviews-verbose":"npx webpack --config webpack.datascience-ui.config.js","postinstall":"node ./node_modules/vscode/bin/install && node ./build/ci/postInstall.js","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --require source-map-support/register --opts ./build/.mocha.unittests.opts","test:unittests:cover":"nyc --nycrc-path ./build/.nycrc npm run test:unittests","test:functional":"mocha --require source-map-support/register --opts ./build/.mocha.functional.opts","test:functional:cover":"nyc --nycrc-path ./build/.nycrc npm run test:functional","testDebugger":"node ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/standardTest.js","testMultiWorkspace":"node ./out/test/multiRootTest.js","testPerformance":"node ./out/test/performanceTest.js","testSmoke":"node ./out/test/smokeTest.js","lint-staged":"node gulpfile.js","lint":"tslint src/**/*.ts -t verbose","clean":"gulp clean","cover:enable":"gulp cover:enable","debugger-coverage":"gulp debugger-coverage","cover:inlinesource":"gulp inlinesource"},"dependencies":{"@jupyterlab/services":"^3.1.4","arch":"^2.1.0","azure-storage":"^2.10.1","diff-match-patch":"^1.0.0","dotenv":"^5.0.1","file-matcher":"^1.3.0","fs-extra":"^4.0.3","fuzzy":"^0.1.3","get-port":"^3.2.0","glob":"^7.1.2","iconv-lite":"^0.4.21","inversify":"^4.11.1","line-by-line":"^0.1.6","lodash":"^4.17.11","md5":"^2.2.1","minimatch":"^3.0.4","named-js-regexp":"^1.3.3","node-stream-zip":"^1.6.0","opn":"^5.3.0","pidusage":"^1.2.0","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","rxjs":"^5.5.9","semver":"^5.5.0","stack-trace":"0.0.10","strip-json-comments":"^2.0.1","sudo-prompt":"^8.2.0","tmp":"^0.0.29","tree-kill":"^1.2.0","typescript-char":"^0.0.0","uint64be":"^1.0.1","unicode":"^10.0.0","untildify":"^3.0.2","vscode-debugadapter":"^1.28.0","vscode-debugprotocol":"^1.28.0","vscode-extension-telemetry":"^0.1.0","vscode-languageclient":"^4.4.0","vscode-languageserver":"^4.4.0","vscode-languageserver-protocol":"^3.10.3","winreg":"^1.2.4","xml2js":"^0.4.19"},"devDependencies":{"@babel/core":"^7.1.0","@babel/preset-env":"^7.1.0","@babel/preset-react":"^7.0.0","@nteract/transform-dataresource":"^4.3.5","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^3.2.3","@nteract/transforms":"^4.4.4","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/copy-webpack-plugin":"^4.4.2","@types/del":"^3.0.0","@types/diff-match-patch":"^1.0.32","@types/dotenv":"^4.0.3","@types/download":"^6.2.2","@types/enzyme":"^3.1.14","@types/enzyme-adapter-react-16":"^1.0.3","@types/event-stream":"^3.3.33","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/html-webpack-plugin":"^3.2.0","@types/iconv-lite":"^0.0.1","@types/istanbul":"^0.4.29","@types/jsdom":"^11.12.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/mocha":"^2.2.48","@types/node":"9.4.7","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-codemirror":"^1.0.2","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^4.3.0","@types/stack-trace":"0.0.29","@types/strip-json-comments":"0.0.30","@types/temp":"^0.8.32","@types/tmp":"0.0.33","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/webpack-bundle-analyzer":"^2.13.0","@types/winreg":"^1.2.30","@types/xml2js":"^0.4.2","JSONStream":"^1.3.2","ansi-to-html":"^0.6.7","awesome-typescript-loader":"^5.2.1","babel-loader":"^8.0.3","babel-plugin-inline-json-import":"^0.3.1","babel-plugin-transform-runtime":"^6.23.0","babel-polyfill":"^6.26.0","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","codecov":"^3.0.0","colors":"^1.2.1","copy-webpack-plugin":"^4.6.0","cross-spawn":"^6.0.5","css-loader":"^1.0.1","decache":"^4.4.0","del":"^3.0.0","download":"^7.0.0","enzyme":"^3.7.0","enzyme-adapter-react-16":"^1.6.0","event-stream":"3.3.4","file-loader":"^2.0.0","flat":"^4.0.0","gulp":"^4.0.0","gulp-debounced-watch":"^1.0.4","gulp-filter":"^5.1.0","gulp-inline-source":"^3.2.0","gulp-json-editor":"^2.2.2","gulp-sourcemaps":"^2.6.4","gulp-typescript":"^4.0.1","gulp-watch":"^5.0.0","html-webpack-plugin":"^3.2.0","husky":"^1.1.2","is-running":"^2.1.0","istanbul":"^0.4.5","jsdom":"^12.2.0","json-loader":"^0.5.7","loader-utils":"^1.1.0","mocha":"^5.0.4","mocha-junit-reporter":"^1.17.0","node-has-native-dependencies":"^1.0.2","nyc":"^13.1.0","raw-loader":"^0.5.1","react":"^16.5.2","react-codemirror":"^1.0.0","react-dev-utils":"^5.0.2","react-dom":"^16.5.2","react-json-tree":"^0.11.0","relative":"^3.0.2","remap-istanbul":"^0.10.1","retyped-diff-match-patch-tsd-ambient":"^1.0.0-0","rewiremock":"^3.13.0","shortid":"^2.2.8","style-loader":"^0.23.1","styled-jsx":"^3.1.0","svg-inline-loader":"^0.8.0","svg-inline-react":"^3.1.0","ts-loader":"^5.3.0","ts-mockito":"^2.3.1","tsconfig-paths-webpack-plugin":"^3.2.0","tslint":"^5.9.1","tslint-eslint-rules":"^5.1.0","tslint-microsoft-contrib":"^5.0.3","typed-react-markdown":"^0.1.0","typemoq":"^2.1.0","typescript":"^3.2.2","typescript-formatter":"^7.1.0","url-loader":"^1.1.1","uuid":"^3.3.2","vscode":"^1.1.22","vscode-debugadapter-testsupport":"^1.27.0","webpack":"^4.20.2","webpack-bundle-analyzer":"^3.0.3","webpack-cli":"^3.1.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^4.1.4","webpack-node-externals":"^1.7.2","yargs":"^12.0.2"},"uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.python","extensionLocation":{"$mid":1,"fsPath":"/home/faris/.vscode/extensions/ms-python.python-2019.1.0","path":"/home/faris/.vscode/extensions/ms-python.python-2019.1.0","scheme":"file"}},{"name":"Go","version":"0.8.0","publisher":"ms-vscode","description":"Rich Go language support for Visual Studio Code","author":{"name":"Microsoft Corporation - Development Labs"},"icon":"images/goIcon.png","categories":["Programming Languages","Snippets","Linters","Debuggers","Formatters"],"galleryBanner":{"color":"#CFB69A","theme":"light"},"private":true,"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-go.git"},"keywords":["multi-root ready"],"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test","lint":"node ./node_modules/tslint/bin/tslint ./src/*.ts ./src/debugAdapter/*.ts ./test/*.ts"},"extensionDependencies":[],"dependencies":{"diff":"^3.5.0","json-rpc2":"^1.0.2","vscode-debug-logger":"0.0.5","vscode-debugadapter":"^1.32.1","vscode-debugprotocol":"^1.32.0","vscode-extension-telemetry":"^0.1.0","vscode-languageclient":"~4.3.0"},"devDependencies":{"@types/fs-extra":"^5.0.4","@types/mocha":"^5.2.5","@types/node":"^6.14.0","fs-extra":"^7.0.0","tslint":"^5.11.0","typescript":"^3.1.3","vscode":"^1.1.26"},"engines":{"vscode":"^1.23.0"},"activationEvents":["onLanguage:go","onCommand:go.gopath","onCommand:go.tools.install","onDebugResolve:go"],"main":"/home/faris/.vscode/extensions/ms-vscode.go-0.8.0/out/src/goMain","contributes":{"languages":[{"id":"go","extensions":[".go"],"aliases":["Go"]}],"snippets":[{"language":"go","path":"./snippets/go.json"}],"configurationDefaults":{"[go]":{"editor.insertSpaces":false,"editor.formatOnSave":true}},"commands":[{"command":"go.gopath","title":"Go: Current GOPATH","description":"See the currently set GOPATH."},{"command":"go.test.cursor","title":"Go: Test Function At Cursor","description":"Runs a unit test at the cursor."},{"command":"go.benchmark.cursor","title":"Go: Benchmark Function At Cursor","description":"Runs a benchmark at the cursor."},{"command":"go.test.file","title":"Go: Test File","description":"Runs all unit tests in the current file."},{"command":"go.test.package","title":"Go: Test Package","description":"Runs all unit tests in the package of the current file."},{"command":"go.benchmark.package","title":"Go: Benchmark Package","description":"Runs all benchmarks in the package of the current file."},{"command":"go.benchmark.file","title":"Go: Benchmark File","description":"Runs all benchmarks in the current file."},{"command":"go.test.workspace","title":"Go: Test All Packages In Workspace","description":"Runs all unit tests from all packages in the current workspace."},{"command":"go.test.previous","title":"Go: Test Previous","description":"Re-runs the last executed test."},{"command":"go.test.coverage","title":"Go: Toggle Test Coverage In Current Package","description":"Displays test coverage in the current package."},{"command":"go.test.generate.package","title":"Go: Generate Unit Tests For Package","description":"Generates unit tests for the current package"},{"command":"go.test.generate.file","title":"Go: Generate Unit Tests For File","description":"Generates unit tests for the current file"},{"command":"go.test.generate.function","title":"Go: Generate Unit Tests For Function","description":"Generates unit tests for the selected function in the current file"},{"command":"go.impl.cursor","title":"Go: Generate Interface Stubs","description":"Generates method stub for implementing the provided interface and inserts at the cursor."},{"command":"go.import.add","title":"Go: Add Import","description":"Add an import declaration"},{"command":"go.add.package.workspace","title":"Go: Add Package to Workspace","description":"Add a package from the imports list to the workspace."},{"command":"go.tools.install","title":"Go: Install/Update Tools","description":"install/update the required go packages"},{"command":"go.toggle.test.file","title":"Go: Toggle Test File","description":"Toggles between file in current active editor and the corresponding test file."},{"command":"go.add.tags","title":"Go: Add Tags To Struct Fields","description":"Add tags configured in go.addTags setting to selected struct using gomodifytags"},{"command":"go.remove.tags","title":"Go: Remove Tags From Struct Fields","description":"Remove tags configured in go.removeTags setting from selected struct using gomodifytags"},{"command":"go.fill.struct","title":"Go: Fill struct","description":"Fill a struct literal with default values"},{"command":"go.show.commands","title":"Go: Show All Commands...","description":"Shows all commands from the Go extension in the quick pick"},{"command":"go.browse.packages","title":"Go: Browse Packages","description":"Browse packages and Go files inside the packages."},{"command":"go.get.package","title":"Go: Get Package","description":"Run `go get -v` on the package on the current line."},{"command":"go.playground","title":"Go: Run on Go Playground","description":"Upload the current selection or file to the Go Playground"},{"command":"go.lint.package","title":"Go: Lint Current Package","description":"Run linter in the package of the current file."},{"command":"go.lint.workspace","title":"Go: Lint Workspace","description":"Run linter in the current workspace."},{"command":"go.vet.package","title":"Go: Vet Current Package","description":"Run go vet in the package of the current file."},{"command":"go.vet.workspace","title":"Go: Vet Workspace","description":"Run go vet in the current workspace."},{"command":"go.build.package","title":"Go: Build Current Package","description":"Build the package of the current file."},{"command":"go.build.workspace","title":"Go: Build Workspace","description":"Build the current workspace."},{"command":"go.install.package","title":"Go: Install Current Package","description":"Install the current package."},{"command":"go.test.cancel","title":"Go: Cancel Running Tests","description":"Cancels running tests."}],"debuggers":[{"type":"go","label":"Go","enableBreakpointsFor":{"languageIds":["go"]},"program":"./out/src/debugAdapter/goDebug.js","runtime":"node","languages":["go"],"configurationSnippets":[{"label":"Go: Launch package","description":"Debug the package in the program attribute","body":{"name":"${2:Launch Package}","type":"go","request":"launch","mode":"debug","program":"^\"\\${workspaceFolder}${1:}\""}},{"label":"Go: Launch file","description":"Debug the file in the program attribute","body":{"name":"${2:Launch file}","type":"go","request":"launch","mode":"debug","program":"^\"${1:\\${file}}\""}},{"label":"Go: Launch test package","description":"Debug the test package in the program attribute","body":{"name":"${2:Launch test package}","type":"go","request":"launch","mode":"test","program":"^\"\\${workspaceFolder}${1:}\""}},{"label":"Go: Launch test function","description":"Debug the test function in the args, ensure program attributes points to right package","body":{"name":"${3:Launch test function}","type":"go","request":"launch","mode":"test","program":"^\"\\${workspaceFolder}${1:}\"","args":["-test.run","${2:MyTestFunction}"]}},{"label":"Go: Connect to server","description":"Connect to a remote headless debug server","body":{"name":"${3:Connect to server}","type":"go","request":"launch","mode":"remote","remotePath":"^\"\\${workspaceFolder}${1:}\"","port":2345,"host":"127.0.0.1","program":"^\"\\${workspaceFolder}${1:}\"","env":{},"args":[]}}],"configurationAttributes":{"launch":{"required":[],"properties":{"program":{"type":"string","description":"Path to the program folder (or any file within that folder) when in 'debug' or 'test' mode, and to the pre-built binary file to debug in 'exec' mode.","default":"${workspaceFolder}"},"mode":{"enum":["auto","debug","remote","test","exec"],"description":"One of 'auto', 'debug', 'remote', 'test', 'exec'.","default":"auto"},"stopOnEntry":{"type":"boolean","description":"Automatically stop program after launch.","default":false},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"showLog":{"type":"boolean","description":"Show log output from the delve debugger.","default":false},"cwd":{"type":"string","description":"Workspace relative or absolute path to the working directory of the program being debugged. Default is the current workspace.","default":"."},"env":{"type":"object","description":"Environment variables passed to the program.","default":{}},"buildFlags":{"type":"string","description":"Build flags, to be passed to the Go compiler.","default":""},"init":{"type":"string","description":"Init file, executed by the terminal client.","default":""},"remotePath":{"type":"string","description":"If remote debugging, the path to the source code on the remote machine, if different from the local machine.","default":""},"port":{"type":"number","description":"The port that the delve debugger will be listening on.","default":2345},"host":{"type":"string","description":"The host name of the machine the delve debugger will be listening on.","default":"127.0.0.1"},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the extension will log diagnostic info to a file. When 'verbose', it will also show logs in the console."},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"backend":{"type":"string","enum":["default","native","lldb"],"description":"Backend used by delve. Only available in delve version 0.12.2 and above."},"output":{"type":"string","description":"Output path for the binary of delve","default":"debug"},"logOutput":{"type":"string","enum":["debugger","gdbwire","lldbout","debuglineerr","rpc"],"description":"Comma separated list of components that should produce debug output.","default":"debugger"},"dlvLoadConfig":{"type":"object","properties":{"followPointers":{"type":"boolean","description":"FollowPointers requests pointers to be automatically dereferenced","default":true},"maxVariableRecurse":{"type":"number","description":"MaxVariableRecurse is how far to recurse when evaluating nested types","default":1},"maxStringLen":{"type":"number","description":"MaxStringLen is the maximum number of bytes read from a string","default":64},"maxArrayValues":{"type":"number","description":"MaxArrayValues is the maximum number of elements read from an array, a slice or a map","default":64},"maxStructFields":{"type":"number","description":"MaxStructFields is the maximum number of fields read from a struct, -1 will read all fields","default":-1}},"description":"LoadConfig describes to delve, how to load values from target's memory","default":{"followPointers":true,"maxVariableRecurse":1,"maxStringLen":64,"maxArrayValues":64,"maxStructFields":-1}},"apiVersion":{"type":"number","enum":[1,2],"description":"Delve Api Version to use. Default value is 2.","default":2},"stackTraceDepth":{"type":"number","description":"Maximum depth of stack trace collected from Delve","default":50}}}}}],"configuration":{"type":"object","title":"Go configuration","properties":{"go.buildOnSave":{"type":"string","enum":["package","workspace","off"],"default":"package","description":"Compiles code on file save using 'go build -i' or 'go test -c -i'. Options are 'workspace', 'package or 'off'.","scope":"resource"},"go.buildFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Flags to `go build`/`go test` used during build-on-save or running tests. (e.g. ['-ldflags=\"-s\"'])","scope":"resource"},"go.buildTags":{"type":"string","default":"","description":"The Go build tags to use for all commands, that support a `-tags '...'` argument. When running tests, go.testTags will be used instead if it was set.","scope":"resource"},"go.testTags":{"type":["string","null"],"default":null,"description":"The Go build tags to use for when running tests. If null, then buildTags will be used.","scope":"resource"},"go.installDependenciesWhenBuilding":{"type":"boolean","default":true,"description":"If true, then `-i` flag will be passed to `go build` everytime the code is compiled.","scope":"resource"},"go.lintOnSave":{"type":"string","enum":["file","package","workspace","off"],"default":"package","description":"Lints code on file save using the configured Lint tool. Options are 'file', 'package', 'workspace' or 'off'.","scope":"resource"},"go.lintTool":{"type":"string","default":"golint","description":"Specifies Lint tool name.","scope":"resource","enum":["golint","gometalinter","megacheck","golangci-lint","revive"]},"go.lintFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Flags to pass to Lint tool (e.g. [\"-min_confidence=.8\"])","scope":"resource"},"go.vetOnSave":{"type":"string","enum":["package","workspace","off"],"default":"package","description":"Vets code on file save using 'go tool vet'. Options are 'workspace', 'package or 'off'.","scope":"resource"},"go.vetFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Flags to pass to `go tool vet` (e.g. ['-all', '-shadow'])","scope":"resource"},"go.formatTool":{"type":"string","default":"goreturns","description":"Pick 'gofmt', 'goimports', 'goreturns' or 'goformat' to run on format.","scope":"resource","enum":["gofmt","goimports","goreturns","goformat"]},"go.formatFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Flags to pass to format tool (e.g. ['-s'])","scope":"resource"},"go.inferGopath":{"type":"boolean","default":false,"description":"Infer GOPATH from the workspace root.","scope":"resource"},"go.gopath":{"type":["string","null"],"default":null,"description":"Specify GOPATH here to override the one that is set as environment variable. The inferred GOPATH from workspace root overrides this, if go.inferGopath is set to true.","scope":"resource"},"go.toolsGopath":{"type":"string","default":"","description":"Location to install the Go tools that the extension depends on if you don't want them in your GOPATH.","scope":"resource"},"go.goroot":{"type":["string","null"],"default":null,"description":"Specifies the GOROOT to use when no environment variable is set.","scope":"resource"},"go.testOnSave":{"type":"boolean","default":false,"description":"Run 'go test' on save for current package. It is not advised to set this to `true` when you have Auto Save enabled.","scope":"resource"},"go.coverOnSave":{"type":"boolean","default":false,"description":"If true, runs 'go test -coverprofile' on save and shows test coverage.","scope":"resource"},"go.coverOnTestPackage":{"type":"boolean","default":true,"description":"If true, shows test coverage when Go: Test Package command is run."},"go.coverOnSingleTest":{"type":"boolean","default":false,"description":"If true, shows test coverage when Go: Test Function at cursor command is run."},"go.coverageOptions":{"type":"string","enum":["showCoveredCodeOnly","showUncoveredCodeOnly","showBothCoveredAndUncoveredCode"],"default":"showBothCoveredAndUncoveredCode","description":"Use these options to control whether only covered or only uncovered code or both should be highlighted after running test coverage","scope":"resource"},"go.coverageDecorator":{"type":"object","properties":{"type":{"type":"string","default":"highlight","enum":["highlight","gutter"]},"coveredHighlightColor":{"type":"string","default":"rgba(64,128,128,0.5)","description":"Color in the rgba format to use to highlight covered code."},"uncoveredHighlightColor":{"type":"string","default":"rgba(128,64,64,0.25)","description":"Color in the rgba format to use to highlight uncovered code."},"coveredGutterStyle":{"type":"string","default":"blockblue","enum":["blockblue","blockred","blockgreen","blockyellow","slashred","slashgreen","slashblue","slashyellow","verticalred","verticalgreen","verticalblue","verticalyellow"],"description":"Gutter style to indicate covered code."},"uncoveredGutterStyle":{"type":"string","default":"blockblue","enum":["blockblue","blockred","blockgreen","blockyellow","slashred","slashgreen","slashblue","slashyellow","verticalred","verticalgreen","verticalblue","verticalyellow"],"description":"Gutter style to indicate covered code."}},"default":{"type":"highlight","coveredHighlightColor":"rgba(64,128,128,0.5)","uncoveredHighlightColor":"rgba(128,64,64,0.25)","coveredGutterStyle":"blockblue","uncoveredGutterStyle":"slashyellow"},"description":"This option lets you choose the way to display code coverage. Choose either to highlight the complete line or to show a decorator in the gutter. You can customize the color for the former and the style for the latter.","scope":"resource"},"go.testTimeout":{"type":"string","default":"30s","description":"Specifies the timeout for go test in ParseDuration format.","scope":"resource"},"go.testEnvVars":{"type":"object","default":{},"description":"Environment variables that will passed to the process that runs the Go tests","scope":"resource"},"go.testEnvFile":{"type":"string","default":null,"description":"Absolute path to a file containing environment variables definitions. File contents should be of the form key=value.","scope":"resource"},"go.testFlags":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"Flags to pass to `go test`. If null, then buildFlags will be used.","scope":"resource"},"go.generateTestsFlags":{"type":"array","items":{"type":"string"},"default":[],"description":"Additional command line flags to pass to `gotests` for generating tests.","scope":"resource"},"go.toolsEnvVars":{"type":"object","default":{},"description":"Environment variables that will passed to the processes that run the Go tools (e.g. CGO_CFLAGS)","scope":"resource"},"go.gocodeFlags":{"type":"array","items":{"type":"string"},"default":["-builtin","-ignore-case","-unimported-packages"],"description":"Additional flags to pass to gocode.","scope":"resource"},"go.gocodeAutoBuild":{"type":"boolean","default":false,"description":"Enable gocode's autobuild feature","scope":"resource"},"go.gocodePackageLookupMode":{"type":"string","enum":["go","gb","bzl"],"default":"go","description":"Used to determine the Go package lookup rules for completions by gocode. Only applies when using nsf/gocode. Latest versions of the Go extension uses mdempsky/gocode by default.","scope":"resource"},"go.useCodeSnippetsOnFunctionSuggest":{"type":"boolean","default":false,"description":"Complete functions with their parameter signature, including the variable types","scope":"resource"},"go.useCodeSnippetsOnFunctionSuggestWithoutType":{"type":"boolean","default":false,"description":"Complete functions with their parameter signature, excluding the variable types","scope":"resource"},"go.autocompleteUnimportedPackages":{"type":"boolean","default":false,"description":"Include unimported packages in auto-complete suggestions.","scope":"resource"},"go.docsTool":{"type":"string","default":"godoc","description":"Pick 'godoc' or 'gogetdoc' to get documentation. In Go 1.5, godoc is used regardless of the choice here.","scope":"resource","enum":["godoc","gogetdoc","guru"]},"go.useLanguageServer":{"type":"boolean","default":false,"description":"Experimental: Use Go language server from Sourcegraph for Hover, Definition, Find All References, Signature Help, File Outline and Workspace Symbol features instead of tools like guru, godef, go-outline and go-symbol"},"go.languageServerFlags":{"type":"array","default":[],"description":"Flags like -trace and -logfile to be used while running the language server."},"go.languageServerExperimentalFeatures":{"type":"object","properties":{"format":{"type":"boolean","default":false,"description":"If true, gofmt is used by the language server to format files."},"autoComplete":{"type":"boolean","default":false,"description":"If true, the language server will provide code completion results."},"rename":{"type":"boolean","default":false,"description":"If true, the language server will be used for the Rename feature."},"goToDefinition":{"type":"boolean","default":false,"description":"If true, the language server will be used for the Go to/Peek Definition feature."},"goToTypeDefinition":{"type":"boolean","default":false,"description":"If true, the language server will be used for the Go to/Peek Type Definition feature."},"hover":{"type":"boolean","default":false,"description":"If true, the language server will be used for the hover feature."},"findReferences":{"type":"boolean","default":false,"description":"If true, the language server will be used for the Find/Peek References feature."},"signatureHelp":{"type":"boolean","default":false,"description":"If true, the language server will be used for the Signature Help/Parameter Hints feature."},"documentSymbols":{"type":"boolean","default":false,"description":"If true, the language server will be used for the Go to Document Symbols/Outline/Breadcrumbs feature."},"workspaceSymbols":{"type":"boolean","default":false,"description":"If true, the language server will be used for the Go to Workspace Symbols feature."}},"default":{"format":false,"autoComplete":false,"rename":true,"goToDefinition":true,"hover":true,"signatureHelp":true,"goToTypeDefinition":true,"goToImplementation":true,"documentSymbols":true,"workspaceSymbols":true,"findReferences":true},"description":"Use this setting to enable/disable experimental features from the language server."},"go.gotoSymbol.includeImports":{"type":"boolean","default":false,"description":"If false, the import statements will be excluded while using the Go to Symbol in File feature","scope":"resource"},"go.gotoSymbol.includeGoroot":{"type":"boolean","default":false,"description":"If false, the standard library located at $GOROOT will be excluded while using the Go to Symbol in File feature","scope":"resource"},"go.enableCodeLens":{"type":"object","properties":{"references":{"type":"boolean","default":false,"description":"If true, enables the references code lens. Uses guru. Recalculates when there is change to the document followed by scrolling."},"runtest":{"type":"boolean","default":true,"description":"If true, enables code lens for running and debugging tests"}},"default":{"references":false,"runtest":true},"description":"Feature level setting to enable/disable code lens for references and run/debug tests","scope":"resource"},"go.addTags":{"type":"object","properties":{"promptForTags":{"type":"boolean","default":false,"description":"If true, Go: Add Tags command will prompt the user to provide tags and options instead of using the configured values"},"tags":{"type":"string","default":"json","description":"Comma separated tags to be used by Go: Add Tags command"},"options":{"type":"string","default":"json=omitempty","description":"Comma separated tag=options pairs to be used by Go: Add Tags command"},"transform":{"type":"string","enum":["snakecase","camelcase"],"default":"snakecase","description":"Transformation rule used by Go: Add Tags command to add tags"}},"default":{"tags":"json","options":"json=omitempty","promptForTags":false,"transform":"snakecase"},"description":"Tags and options configured here will be used by the Add Tags command to add tags to struct fields. If promptForTags is true, then user will be prompted for tags and options. By default, json tags are added.","scope":"resource"},"go.liveErrors":{"type":"object","properties":{"enabled":{"type":"boolean","default":false,"description":"If true, runs gotype on the file currently being edited and reports any semantic or syntactic errors found."},"delay":{"type":"number","default":500,"description":"The number of milliseconds to delay before execution. Resets with each keystroke."}},"default":{"enabled":false,"delay":500},"description":"Use gotype on the file currently being edited and report any semantic or syntactic errors found after configured delay.","scope":"resource"},"go.removeTags":{"type":"object","properties":{"promptForTags":{"type":"boolean","default":false,"description":"If true, Go: Remove Tags command will prompt the user to provide tags and options instead of using the configured values"},"tags":{"type":"string","default":"json","description":"Comma separated tags to be used by Go: Remove Tags command"},"options":{"type":"string","default":"json=omitempty","description":"Comma separated tag=options pairs to be used by Go: Remove Tags command"}},"default":{"tags":"","options":"","promptForTags":false},"description":"Tags and options configured here will be used by the Remove Tags command to remove tags to struct fields. If promptForTags is true, then user will be prompted for tags and options. By default, all tags and options will be removed.","scope":"resource"},"go.playground":{"type":"object","properties":{"openbrowser":{"type":"boolean","default":true,"description":"Whether to open the created Go Playground in the default browser"},"share":{"type":"boolean","default":true,"description":"Whether to make the created Go Playground shareable"},"run":{"type":"boolean","default":true,"description":"Whether to run the created Go Playground after creation"},"description":"The flags configured here will be passed through to command `goplay`"},"default":{"openbrowser":true,"share":true,"run":true}},"go.editorContextMenuCommands":{"type":"object","properties":{"toggleTestFile":{"type":"boolean","default":true,"description":"If true, adds command to toggle between a Go file and its test file to the editor context menu"},"addTags":{"type":"boolean","default":true,"description":"If true, adds command to add configured tags from struct fields to the editor context menu"},"removeTags":{"type":"boolean","default":true,"description":"If true, adds command to remove configured tags from struct fields to the editor context menu"},"fillStruct":{"type":"boolean","default":true,"description":"If true, adds command to fill struct literal with default values to the editor context menu"},"testAtCursor":{"type":"boolean","default":true,"description":"If true, adds command to run the test under the cursor to the editor context menu"},"testFile":{"type":"boolean","default":true,"description":"If true, adds command to run all tests in the current file to the editor context menu"},"testPackage":{"type":"boolean","default":true,"description":"If true, adds command to run all tests in the current package to the editor context menu"},"generateTestForFunction":{"type":"boolean","default":true,"description":"If true, adds command to generate unit tests for function under the cursor to the editor context menu"},"generateTestForFile":{"type":"boolean","default":true,"description":"If true, adds command to generate unit tests for current file to the editor context menu"},"generateTestForPackage":{"type":"boolean","default":true,"description":"If true, adds command to generate unit tests for currnt package to the editor context menu"},"addImport":{"type":"boolean","default":true,"description":"If true, adds command to import a package to the editor context menu"},"testCoverage":{"type":"boolean","default":true,"description":"If true, adds command to run test coverage to the editor context menu"},"playground":{"type":"boolean","default":true,"description":"If true, adds command to upload the current file or selection to the Go Playground"}},"default":{"toggleTestFile":true,"addTags":true,"removeTags":false,"testAtCursor":true,"testFile":false,"testPackage":false,"generateTestForFunction":true,"generateTestForFile":false,"generateTestForPackage":false,"addImport":true,"testCoverage":true,"playground":true},"description":"Experimental Feature: Enable/Disable entries from the context menu in the editor.","scope":"resource"},"go.gotoSymbol.ignoreFolders":{"type":"array","items":{"type":"string"},"default":[],"description":"Folder names (not paths) to ignore while using Go to Symbol in Workspace feature","scope":"resource"},"go.delveConfig":{"type":"object","properties":{"dlvLoadConfig":{"type":"object","properties":{"followPointers":{"type":"boolean","description":"FollowPointers requests pointers to be automatically dereferenced","default":true},"maxVariableRecurse":{"type":"number","description":"MaxVariableRecurse is how far to recurse when evaluating nested types","default":1},"maxStringLen":{"type":"number","description":"MaxStringLen is the maximum number of bytes read from a string","default":64},"maxArrayValues":{"type":"number","description":"MaxArrayValues is the maximum number of elements read from an array, a slice or a map","default":64},"maxStructFields":{"type":"number","description":"MaxStructFields is the maximum number of fields read from a struct, -1 will read all fields","default":-1}},"description":"LoadConfig describes to delve, how to load values from target's memory","default":{"followPointers":true,"maxVariableRecurse":1,"maxStringLen":64,"maxArrayValues":64,"maxStructFields":-1}},"apiVersion":{"type":"number","enum":[1,2],"description":"Delve Api Version to use. Default value is 2.","default":2}},"scope":"resource"},"go.alternateTools":{"type":"object","default":{},"description":"Alternate tools or alternate paths for the same tools used by the Go extension. Provide either absolute path or the name of the binary in GOPATH/bin, GOROOT/bin or PATH. Useful when you want to use wrapper script for the Go tools or versioned tools from https://gopkg.in.","scope":"resource","properties":{"go":{"type":"string","default":"go","description":"Alternate tool to use instead of the go binary or alternate path to use for the go binary."},"gometalinter":{"type":"string","default":"gometalinter","description":"Alternate tool to use instead of the gometalinter binary or alternate path to use for the gometalinter binary."},"gocode":{"type":"string","default":"gocode","description":"Alternate tool to use instead of the gocode binary or alternate path to use for the gocode binary."},"gopkgs":{"type":"string","default":"gopkgs","description":"Alternate tool to use instead of the gopkgs binary or alternate path to use for the gopkgs binary."},"go-outline":{"type":"string","default":"go-outline","description":"Alternate tool to use instead of the go-outline binary or alternate path to use for the go-outline binary."},"guru":{"type":"string","default":"guru","description":"Alternate tool to use instead of the guru binary or alternate path to use for the guru binary."}}}}},"menus":{"editor/context":[{"when":"editorTextFocus && config.go.editorContextMenuCommands.toggleTestFile && resourceLangId == go","command":"go.toggle.test.file","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.addTags && resourceLangId == go","command":"go.add.tags","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.removeTags && resourceLangId == go","command":"go.remove.tags","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.fillStruct && resourceLangId == go","command":"go.fill.struct","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.testAtCursor && resourceLangId == go && !config.editor.codeLens","command":"go.test.cursor","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.benchmarkAtCursor && resourceLangId == go && !config.editor.codeLens","command":"go.benchmark.cursor","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.testFile && resourceLangId == go","command":"go.test.file","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.testPackage && resourceLangId == go","command":"go.test.package","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.generateTestForFunction && resourceLangId == go","command":"go.test.generate.function","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.generateTestForFile && resourceLangId == go","command":"go.test.generate.file","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.generateTestForPackage && resourceLangId == go","command":"go.test.generate.package","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.addImport && resourceLangId == go","command":"go.import.add","group":"Go group 1"},{"when":"editorTextFocus && config.go.editorContextMenuCommands.testCoverage && resourceLangId == go","command":"go.test.coverage","group":"Go group 1"},{"when":"editorTextFocus && resourceLangId == go","command":"go.show.commands","group":"Go group 2"}]}},"uuid":"d6f6cfea-4b6f-41f4-b571-6ad2ab7918da","isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.Go","extensionLocation":{"$mid":1,"fsPath":"/home/faris/.vscode/extensions/ms-vscode.go-0.8.0","path":"/home/faris/.vscode/extensions/ms-vscode.go-0.8.0","scheme":"file"}},{"name":"vscode-yaml","displayName":"YAML","description":"YAML Language Support by Red Hat, with built-in Kubernetes and Kedge syntax support","author":"Red Hat","contributors":[{"name":"Joshua Pinkney","email":"jpinkney@redhat.com"}],"license":"MIT","version":"0.2.1","publisher":"redhat","preview":true,"bugs":"https://github.com/redhat-developer/vscode-yaml/issues","repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-yaml"},"icon":"icon/icon128.png","engines":{"vscode":"^1.22.0"},"categories":["Programming Languages","Linters","Snippets","Formatters"],"activationEvents":["onLanguage:yaml"],"keywords":["kubernetes","kedge","yaml","autocompletion","validation"],"main":"/home/faris/.vscode/extensions/redhat.vscode-yaml-0.2.1/out/src/extension","contributes":{"languages":[{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yml",".eyaml",".eyml",".yaml"],"filenames":[],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"}],"yamlValidation":[],"configuration":{"properties":{"yaml.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the languageServerExample service."},"yaml.schemas":{"type":"object","default":{},"description":"Associate schemas to Yaml files in the current workspace"},"yaml.format.enable":{"type":"boolean","default":false,"description":"Enable/disable default YAML formatter (requires restart)"},"yaml.format.singleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes"},"yaml.format.bracketSpacing":{"type":"boolean","default":true,"description":"Print spaces between brackets in objects"},"yaml.format.proseWrap":{"type":"string","default":"preserve","enum":["preserve","never","always"],"description":"Always: wrap prose if it exeeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is"},"yaml.validate":{"type":"boolean","default":true,"description":"Enable/disable validation feature"},"yaml.hover":{"type":"boolean","default":true,"description":"Enable/disable hover feature"},"yaml.completion":{"type":"boolean","default":true,"description":"Enable/disable completion feature"},"yaml.customTags":{"type":"array","default":[],"description":"Custom tags for the parser to use"}}},"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.quickSuggestions":{"other":true,"comments":false,"strings":true},"editor.autoIndent":false}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","update-vscode":"node ./node_modules/vscode/bin/install","postinstall":"node ./node_modules/vscode/bin/install","test":"mocha --ui tdd out/test/extension.test.js"},"devDependencies":{"@types/mocha":"^2.2.33","@types/node":"^6.0.52","ts-node":"^3.3.0","typescript":"3.0.0-dev.20180626","vscode":"^1.1.17"},"dependencies":{"vscode-languageclient":"3.5.1","vscode-nls":"^3.2.1","vscode-uri":"^1.0.5","yaml-language-server":"0.2.1"},"uuid":"2061917f-f76a-458a-8da9-f162de22b97e","isBuiltin":false,"isUnderDevelopment":false,"id":"redhat.vscode-yaml","extensionLocation":{"$mid":1,"fsPath":"/home/faris/.vscode/extensions/redhat.vscode-yaml-0.2.1","path":"/home/faris/.vscode/extensions/redhat.vscode-yaml-0.2.1","scheme":"file"}},{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.0.5","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.30.0"},"categories":["Other","Keymaps"],"activationEvents":["*","onCommand:type"],"qna":"https://vscodevim-slackin.azurewebsites.net/","main":"/home/faris/.vscode/extensions/vscodevim.vim-1.0.5/out/extension","contributes":{"commands":[{"command":"vim.remap","title":"Vim: Remap any key combination that VS Code supports to Vim motions/operators/ExCommands/macro."},{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !suggestWidgetMultipleSuggestions"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !suggestWidgetMultipleSuggestions"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"suggestWidgetVisible && vim.active && vim.use<C-p>"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<shift+BS> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> &&  !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.overrideCmdV && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"}],"configuration":{"title":"Vim Configuration","type":"object","properties":{"vim.debug.silent":{"type":"boolean","description":"If true, all logs are suppressed.","default":false},"vim.debug.loggingLevelForAlert":{"type":"string","description":"Maximum level of messages to present as VS Code information window.","default":"error"},"vim.debug.loggingLevelForConsole":{"type":"string","description":"Maximum level of messages to log to console. Logs are visible in developer tools.","default":"error"},"vim.normalModeKeyBindings":{"type":"array","description":"Remapped keys in normal mode. Allows mapping to vim commands or vscode actions. See README for details."},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","description":"Non-recursive remapped keys in normal mode. Allows mapping to vim commands or vscode actions. See README for details."},"vim.useCtrlKeys":{"type":"boolean","description":"Enable some vim ctrl key commands that override otherwise common operations, like ctrl+c","default":true},"vim.leader":{"type":"string","description":"What key should <leader> map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","description":"Color of the search highlight.","default":"rgba(150, 150, 255, 0.3)"},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VSCode's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","description":"Remapped keys in insert mode. Allows mapping to vim commands or vscode actions. See README for details."},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","description":"Non-recursive keybinding overrides to use for insert mode. Allows mapping to vim commands or vscode actions. See README for details."},"vim.visualModeKeyBindings":{"type":"array","description":"Remapped keys in visual mode. Allows mapping to vim commands or vscode actions. See README for details."},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","description":"Non-recursive keybinding overrides to use for visual mode. Allows mapping to vim commands or vscode actions. See README for details."},"vim.textwidth":{"type":"number","description":"Width to word-wrap to when using gq.","default":80},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands","default":1000},"vim.scroll":{"type":"number","description":"Number of lines to scroll with CTRL-U and CTRL-D commands.","default":20},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","description":"keywords contain alphanumeric characters and '_'. If not configured `editor.wordSeparators` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","description":"Override the 'ignorecase' option if the search pattern contains upper case characters.","default":true},"vim.easymotion":{"type":"boolean","description":"Enable the EasyMotion plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoChar":{"type":"string","description":"Set a custom color for the text on two character long markers."},"vim.easymotionMarkerWidthPerChar":{"type":"number","description":"Set the width (in pixels) allocated to each character in the match.","default":8},"vim.easymotionMarkerHeight":{"type":"number","description":"Set the height of the marker.","default":14},"vim.easymotionMarkerFontFamily":{"type":"string","description":"Set the font family of the marker text.","default":"Consolas"},"vim.easymotionMarkerFontSize":{"type":"string","description":"Set the font size of the marker text.","default":"14"},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"normal"},"vim.easymotionMarkerYOffset":{"type":"number","description":"Set the Y offset of the marker text (the distance from the top).","default":0},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.sneak":{"type":"boolean","description":"Enable the Sneak plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","description":"Case sensitivity is determined by 'ignorecase' and 'smartcase'","default":false},"vim.surround":{"type":"boolean","description":"Enable the Surround plugin for Vim.","default":true},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern","default":false},"vim.incsearch":{"type":"boolean","description":"Show where a / search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered","default":50},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert Mode."},"vim.handleKeys":{"type":"object","description":"Option to delegate certain key combinations back to VSCode to be handled natively","default":{"<C-d>":true}},"vim.statusBarColorControl":{"type":"boolean","description":"Allow VSCodeVim to change status bar color based on mode","default":false},"vim.statusBarColors.normal":{"type":"string","description":"Status bar color when in Normal mode","default":"#005f5f"},"vim.statusBarColors.insert":{"type":"string","description":"Status bar color when in Insert mode","default":"#5f0000"},"vim.statusBarColors.visual":{"type":"string","description":"Status bar color when in Visual mode","default":"#5f00af"},"vim.statusBarColors.visualline":{"type":"string","description":"Status bar color when in VisualLine mode","default":"#005f5f"},"vim.statusBarColors.visualblock":{"type":"string","description":"Status bar color when in VisualBlock mode","default":"#86592d"},"vim.statusBarColors.replace":{"type":"string","description":"Status bar color when in Replace mode","default":"#00000"},"vim.visualstar":{"type":"boolean","description":"In visual mode, start a search with * or # using the current selection","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"Does dragging with the mouse put you into visual mode","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. Extension will continue to be loaded and activated, but VIM functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","description":"Use neovim on backend. (only works for Ex commands right now). You should restart VScode after enable/disabling this for the changes to take effect. NOTE: Neovim must be installed (v0.2.0) and neovimPath must be set the executable in order for this setting to work. Otherwise, vscodevim will crash.","default":false},"vim.neovimPath":{"type":"string","description":"Path to run neovim executable. For example, /usr/bin/nvim, or  C:\\Program Files\\Neovim\\bin\\nvim.exe","default":"nvim"},"vim.substituteGlobalFlag":{"type":"boolean","description":"Automatically apply the global flag, /g, to substitute commands. When set to true, use /g to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode"},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode"},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode"},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode"},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode"},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode"},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"Switch input method automatically when mode changed","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","description":"The input method for your normal mode, find more information here:https://github.com/VSCodeVim/Vim#use-im-select","default":""},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method","default":"/path/to/im-select {im}"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method","default":"/path/to/im-select"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":""},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2}}}},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","test":"node ./node_modules/vscode/bin/test","forceprettier":"gulp forceprettier","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"appdirectory":"0.1.0","diff-match-patch":"1.0.4","lodash":"4.17.11","mkdirp":"0.5.1","neovim":"4.2.1","untildify":"3.0.3","winston":"3.2.1","winston-console-for-electron":"0.0.6"},"devDependencies":{"@types/diff":"4.0.0","@types/diff-match-patch":"1.0.32","@types/lodash":"4.14.120","@types/mocha":"5.2.5","@types/node":"9.6.41","@types/sinon":"7.0.5","gulp":"4.0.0","gulp-bump":"3.1.3","gulp-git":"2.8.1","gulp-sourcemaps":"2.6.4","gulp-tag-version":"1.3.1","gulp-tslint":"8.1.3","gulp-typescript":"5.0.0","minimist":"1.2.0","mocha":"5.2.0","plugin-error":"1.0.1","prettier":"1.16.3","sinon":"7.2.3","tslint":"5.12.1","typescript":"3.2.4","vscode":"1.1.28"},"uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","isBuiltin":false,"isUnderDevelopment":false,"id":"vscodevim.vim","extensionLocation":{"$mid":1,"fsPath":"/home/faris/.vscode/extensions/vscodevim.vim-1.0.5","path":"/home/faris/.vscode/extensions/vscodevim.vim-1.0.5","scheme":"file"}}]}